Problem:

Objective
Yesterday's challenge taught you to manage exceptional situations by using try and catch blocks. In today's challenge, you're going to practice throwing and propagating an exception. Check out the Tutorial tab for learning materials and an instructional video!

Task
Write a Calculator class with a single method: int power(int,int). The power method takes two integers, n and p, as parameters and
returns the integer result of np. If either n or p is negative, then the method must throw an exception with the message:
n and p should be non-negative.

Note: Do not use an access modifier (e.g.: public) in the declaration for your Calculator class.

Solution:



//Write your code here
class Calculator {

    Calculator() {
    }

    void exceptional() throws IOException {
        throw new IOException("n and p should be non-negative");
    }

    int power(int n, int p) throws IOException {
        int potenziato = (int) (Math.pow(n, p));
        if (n < 0 || p < 0) {
            exceptional();
        }
        return potenziato;
    }
}

